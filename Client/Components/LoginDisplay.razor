@using BlazorStaticWebApps.Client.Services
@using BlazorStaticWebApps.Client.Models
@inject AuthenticationService AuthService
@implements IDisposable

<div class="login-display">
    @if (isLoading)
    {
        <span>Loading...</span>
    }
    else if (user != null)
    {
        <span class="user-info">Hello, @user.UserDetails!</span>
        <a href="/.auth/logout" class="btn btn-link">Logout</a>
    }
    else
    {
        <a href="/.auth/login/aad" class="btn btn-primary">Login</a>
    }
</div>

@code {
    private ClientPrincipal? user;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await AuthService.GetUserInfoAsync();
            AuthService.OnAuthenticationStateChanged += OnAuthenticationStateChanged;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async void OnAuthenticationStateChanged()
    {
        user = AuthService.GetCachedUser();
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthService.OnAuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}
